plugins {
    id 'dev.architectury.loom' version '1.9-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"

}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'me.modmuss50.mod-publish-plugin'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    def modLoader = project.name
    boolean isCommon = modLoader == "common"


    repositories {
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
        maven { url "https://maven.shedaniel.me" }
        maven { url "https://maven.blamejared.com/" }
        maven { url "https://maven.terraformersmc.com/releases" }
        maven { url "https://maven.parchmentmc.org" }
        maven { url "https://maven.commoble.net/" }
        maven { url = 'https://maven.nucleoid.xyz/' }

        maven { url "https://maven.exodusstudio.org/releases" }
        maven { url "https://maven.exodusstudio.org/snapshots" }

        maven {
            url = "https://repo.terradevelopment.net/repository/maven-releases"
        }
        maven {
            url "https://maven2.bai.lol"
            content {
                includeGroup "lol.bai"
            }
        }
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            name "Sky Aesthetics"
            url "https://maven.odysseyus.fr/releases"
        }
        maven { url 'https://jitpack.io' }

    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.parchment_mapping_version}@zip")
        }

        modImplementation "com.st0x0ef.stellaris:stellaris-$modLoader-1.21:$rootProject.stellaris_version"


        modImplementation "fr.tathan.sky-aesthetics:sky-aesthetics-$modLoader-1.21:$sky_version"

        if(modLoader != "neoforge") {
            modApi "com.terraformersmc:modmenu:11.0.3"
        }

        if(modLoader == "neoforge") {
            modImplementation ("net.commoble.infiniverse:infiniverse-1.21:2.0.1.0")
            include("net.commoble.infiniverse:infiniverse-1.21:2.0.1.0")

        }

        if(modLoader == "fabric") {
            modApi("com.github.iPortalTeam:DimLib:v1.1.0-mc1.21.1") {
                exclude(group: "net.fabricmc.fabric-api")
            }
            //modRuntimeOnly "maven.modrinth:flashback:OJJaw9FV"
            modRuntimeOnly "maven.modrinth:nvidium:3L83QwKZ"
            modRuntimeOnly "maven.modrinth:sodium:RncWhTxD"

        }

        if(isCommon) {
            modApi("me.shedaniel.cloth:cloth-config:15.0.140") {
                exclude(group: "net.fabricmc.fabric-api")
            }
        } else {
            modApi("me.shedaniel.cloth:cloth-config-$modLoader:15.0.140") {
                exclude(group: "net.fabricmc.fabric-api")
            }
        }


    }

    if (!isCommon) {
        publishMods {
            file = file(tasks.remapJar.archivePath)
            changelog = file("../changelog.md").getText('UTF-8')
            type = BETA
            modLoaders.add(modLoader)
            displayName = "[${modLoader.capitalize()} ${minecraft_version}] No Man's Craft ${mod_version}"

            curseforge {
                projectId = "1225753"
                projectSlug = "no-mans-craft" // Required for discord webhook
                accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
                minecraftVersions.add("${minecraft_version}")
                minecraftVersions.add("${supported_minecraft_version}")
                javaVersions.add(JavaVersion.VERSION_21)
                requires("stellaris")

                if(modLoader == "neoforge") {
                    embeds("infiniverse")
                }
            }

            modrinth {
                projectId = "oVM2EBnH"
                accessToken = providers.environmentVariable("MODRINTH_TOKEN")
                minecraftVersions.add("${minecraft_version}")
                minecraftVersions.add("${supported_minecraft_version}")
                requires("stellaris")
                if(modLoader == "neoforge") {
                    embeds("infiniverse")
                } else {
                    requires("dimlib")
                }

            }
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
